(load "compiler.scm")

;; native unary primitives
(define-primitive (fxadd1 expr)
    (emit-expr expr)
    (emit "addl $~s, %eax" (emit-immediate 1))
)

(define-primitive (fxsub1 expr)
    (emit-expr expr)
    (emit "subl $~s, %eax" (emit-immediate 1))
)

(define-primitive (char->fixnum expr) 
    (emit-expr expr)
    (emit "shrl $6,  %eax")
    (emit "orl  $~s, %eax" int_tag)
)

(define-primitive (fixnum->char expr) 
    (emit-expr expr)
    (emit "shll $6,  %eax")
    (emit "orl  $~s, %eax" char_tag)
)

(define-primitive (fixnum? expr) 
    (emit-expr expr)
    (emit "andl   $~s,  %eax" (mask int_tag_width))
    (emit "cmpl   $~s,  %eax" int_tag)
    (emit "sete   %al")
    (emit "shll   $~s,  %eax" bool_tag_width)
    (emit "orl    $~s,  %eax" bool_tag)
)

(define-primitive (boolean? expr) 
    (emit-expr expr)
    (emit "andl   $~s,  %eax" (mask bool_tag_width))
    (emit "cmpl   $~s,  %eax" bool_tag)
    (emit "sete   %al")
    (emit "shll   $~s,  %eax" bool_tag_width)
    (emit "orl    $~s,  %eax" bool_tag)
)

(define-primitive (char? expr) 
    (emit-expr expr)
    (emit "andl   $~s,  %eax" (mask char_tag_width))
    (emit "cmpl   $~s,  %eax" char_tag)
    (emit "sete   %al")
    (emit "shll   $~s,  %eax" bool_tag_width)
    (emit "orl    $~s,  %eax" bool_tag)
)

(define-primitive (fxzero? expr)
    (emit-expr expr)
    (emit "cmpl   $0,   %eax")
    (emit "sete   %dl")
    (emit "xorl   %eax, %eax")
    (emit "mov    %dl,  %al")
    (emit "shll   $~s,  %eax" bool_tag_width)
    (emit "orl    $~s,  %eax" bool_tag)
)

(define-primitive (not expr)
    (emit-expr expr)
    (emit "cmpl   $47,   %eax") ;;#b101111
    (emit "sete   %dl")
    (emit "xorl   %eax, %eax")
    (emit "mov    %dl,  %al")
    (emit "shll   $~s,  %eax" bool_tag_width)
    (emit "orl    $~s,  %eax" bool_tag)
)

(define-primitive (null? expr)
    (emit-expr expr)
    (emit "cmpl   $63,   %eax") ;;#b00111111
    (emit "sete   %dl")
    (emit "xorl   %eax, %eax")
    (emit "mov    %dl,  %al")
    (emit "shll   $~s,  %eax" bool_tag_width)
    (emit "orl    $~s,  %eax" bool_tag)
)

(define-primitive (fxlognot expr)
    (emit-expr expr)
    (emit "shrl  $~s,  %eax" int_tag_width)
    (emit "notl  %eax")
    (emit "shll  $~s,  %eax" int_tag_width)
    (emit "orl   $~s,  %eax" int_tag)
)
